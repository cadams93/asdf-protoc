#!/usr/bin/env bash

set -eo pipefail

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version  }
[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

readonly TMP_DIR="$(mktemp -d -t "asdf_protoc_XXXX")"
trap 'rm -rf "${TMP_DIR?}"' EXIT

get_platform() {
  local os=$(uname)
  if [[ "${os}" == "Darwin" ]]; then
    echo "osx"
  elif [[ "${os}" == "Linux" ]]; then
    echo "linux"
  else
    >&2 echo "unsupported os: ${os}" && exit 1
  fi
}

get_arch() {
  local version=$1
  local os=$(uname)
  local arch=$(uname -m)

  # On ARM Macs, uname -m returns "arm64", but in protoc releases this architecture is called "aarch_64"
  if [[ "${os}" == "Darwin" && "${arch}" == "arm64" ]]; then
    local major="$(echo "$version" | cut -d . -f 1)"
    local minor="$(echo "$version" | cut -d . -f 2,2)"

    # Version 3.20 was the first to be published with an osx "aarch_64" architecture.
    if [[ "${major}" < "3" || ("${major}" == "3" && "${minor}" < "20") ]]; then 
      echo "x86_64"
    else 
      echo "aarch_64"
    fi
  else
    echo "${arch}"
  fi
}

install_protoc() {
  local install_type=$1
  local version=$2
  local install_path=$3

  mkdir -p "${install_path}"

  local base_url="https://github.com/protocolbuffers/protobuf/releases/download"
  local url="${base_url}/v${version}/protoc-${version}-$(get_platform)-$(get_arch $version).zip"
  local download_path="${TMP_DIR}/protoc.zip"

  echo "Downloading ${url}"
  curl -fsSL "${url}" -o "${download_path}"

  unzip -qq "${download_path}" -d "${install_path}"
}

install_protoc $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
